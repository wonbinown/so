<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
                        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
       <mapper namespace="mapper.BookMapper">

  <!-- 전체 목록 (최신순) -->
  <select id="findAllBooks" resultType="model.Book">
    SELECT book_id   AS bookId,
           title,
           author,
           description,
           price,
           stock,
           cover_image AS coverImage
    FROM books
    ORDER BY book_id DESC
  </select>

  <!-- 단일 조회 -->
  <select id="findBookById" parameterType="long" resultType="model.Book">
    SELECT book_id   AS bookId,
           title,
           author,
           description,
           price,
           stock,
           cover_image AS coverImage
    FROM books
    WHERE book_id = #{bookId}
  </select>

  <!-- 키워드 검색 -->
  <select id="searchBooksByKeyword" parameterType="string" resultType="model.Book">
    SELECT * FROM books
    WHERE title   LIKE CONCAT('%', #{keyword}, '%')
       OR author  LIKE CONCAT('%', #{keyword}, '%')
    ORDER BY book_id DESC
  </select>

  <!-- 가격대검색 -->
  <select id="searchBooksByPriceRange" parameterType="map" resultType="model.Book">
    SELECT * FROM books
    WHERE price BETWEEN #{min} AND #{max}
    ORDER BY price
  </select>

  <!-- 재고 수정 -->
  <update id="updateBookStock">
    UPDATE books 
       SET stock = #{stock}
     WHERE book_id = #{bookId}
  </update>

  <!-- 할인 적용 -->
  <update id="updateBooksPrice">
    UPDATE books
       SET price = ROUND(price * (1 + #{discountPercent} / 100))
  </update>

  <!-- 재고 차감 -->
  <update id="decreaseStock">
    UPDATE books
       SET stock = stock - #{quantity}
     WHERE book_id = #{bookId}
  </update>

  <!-- 기타 관리 기능들 (insert/update/delete) -->
  <insert id="insertBook" parameterType="model.Book">
    INSERT INTO books(title, author, description, price, stock, cover_image)
    VALUES (#{title}, #{author}, #{description}, #{price}, #{stock}, #{coverImage})
  </insert>

  <update id="updateBook" parameterType="model.Book">
    UPDATE books
       SET title       = #{title},
           author      = #{author},
           description = #{description},
           price       = #{price},
           stock       = #{stock},
           cover_image = #{coverImage}
     WHERE book_id = #{bookId}
  </update>

  <delete id="deleteBook" parameterType="long">
    DELETE FROM books WHERE book_id = #{bookId}
  </delete>

</mapper>
                        